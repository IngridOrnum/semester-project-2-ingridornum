import{c as l,A as d}from"./input-CVPd-dJt.js";import{g as m}from"./main-CeTmBv1G.js";/* empty css               */async function u({title:t,description:e,media:i,tags:o,endsAt:a}){try{const n=await m(),s={method:"POST",headers:{"X-Noroff-API-Key":l,Authorization:`Bearer ${n}`,"Content-Type":"application/json"},body:JSON.stringify({title:t,description:e,media:i,tags:o,endsAt:a})},r=await fetch(d,s),c=await r.json();if(!r.ok)throw console.error("Full API Error Response:",c),new Error(c.errors?c.errors[0].message:"An error occurred.");return{data:c,ok:r.ok}}catch(n){throw console.error("Error in apiCreateListing:",n),n}}document.getElementById("add-image-btn").addEventListener("click",()=>{const t=document.getElementById("image-inputs-container"),e=t.querySelectorAll(".image-input-set").length,i=document.getElementById("image-error-message");if(i.classList.add("hidden"),e>=8)i.classList.remove("hidden");else{const o=`
                    <div class="image-input-set flex flex-col">
                    <div class="line-divider bg-ui-white my-4"></div>
                        <div class="flex items-center justify-between mb-2">
                            <label class="font-text text-ui-black font-light" for="create-media-URL-${e}">Image URL</label>
                            <button type="button" class="remove-image-btn font-text font-light rounded-sm text-xs bg-primary-green p-1 items-center text-ui-white underline cursor-pointer hover:text-ui-black hover:bg-ui-white">Remove</button>
                        </div>
                        <input class="form-input font-text w-[280px] tablet:w-[480px] mb-4" id="create-media-URL-${e}" name="create-media-URL-${e}" type="text">
                        <label class="font-text text-ui-black font-light mb-2" for="create-media-description-${e}">Image Description</label>
                        <input class="form-input font-text w-[280px] tablet:w-[480px]" id="create-media-description-${e}" name="create-media-description-${e}" type="text">
                    </div>
        `;t.insertAdjacentHTML("beforeend",o)}});document.getElementById("image-inputs-container").addEventListener("click",function(t){if(t.target.classList.contains("remove-image-btn")){const e=t.target.closest(".image-input-set");e&&e.remove()}});function p(t){const e=[];return document.querySelectorAll("#image-inputs-container .image-input-set").forEach((o,a)=>{const n=t[`create-media-URL-${a}`],s=t[`create-media-description-${a}`];n&&n.value.trim()&&e.push({url:n.value,alt:s.value||""})}),e}async function g(t){t.preventDefault();const e=t.target,i=e["create-title"],o=e["create-description"],a=e["create-tags"],n=e["create-endsAt"];if(!i.value||!n.value){alert("Please fill in all required fields.");return}const s={title:i.value,description:o.value||"No description provided.",media:p(e),tags:a.value?a.value.split(",").map(r=>r.trim()):[],endsAt:new Date(n.value).toISOString()};console.log("Payload being sent:",s);try{const{data:r,ok:c}=await u(s);c?(alert("Listing created successfully!"),location.reload()):(console.error("Error response from API:",r.errors[0].message),alert(`Error: ${r.errors[0].message||"Failed to create listing."}`))}catch(r){console.error(r),alert("An error occurred. Please try again.")}}document.addEventListener("DOMContentLoaded",()=>{const t=document.getElementById("create-listing-form");t&&t.addEventListener("submit",g)});
