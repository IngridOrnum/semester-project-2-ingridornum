import{c as u,A as p}from"./constants-BDf8nfUD.js";import{g as m}from"./main-btKrpKiE.js";/* empty css              *//* empty css               */async function g({title:t,description:e,media:s,tags:l,endsAt:i}){try{const o=await m(),c={method:"POST",headers:{"X-Noroff-API-Key":u,Authorization:`Bearer ${o}`,"Content-Type":"application/json"},body:JSON.stringify({title:t,description:e,media:s,tags:l,endsAt:i})},a=await fetch(p,c),r=await a.json();if(!a.ok)throw console.error("Full API Error Response:",r),new Error(r.errors?r.errors[0].message:"An error occurred.");return{data:r,ok:a.ok}}catch(o){throw console.error("Error in apiCreateListing:",o),o}}async function f(t){t.preventDefault();const e=t.target,s=e["create-title"],l=e["create-description"],i=e["create-media-URL"],o=e["create-media-description"],c=e["create-tags"],a=e["create-endsAt"];if(!s.value||!a.value){alert("Please fill in all required fields.");return}const r={title:s.value,description:l.value||"No description provided.",media:i.value.trim()?[{url:i.value||"",alt:o.value||""}]:[],tags:c.value?c.value.split(",").map(n=>n.trim()):[],endsAt:new Date(a.value).toISOString()};console.log("Payload being sent:",r);try{const{data:n,ok:d}=await g(r);d?(alert("Listing created successfully!"),location.reload()):(console.error("Error response from API:",n.errors[0].message),alert(`Error: ${n.errors[0].message||"Failed to create listing."}`))}catch(n){console.error(n),alert("An error occurred. Please try again.")}}document.addEventListener("DOMContentLoaded",()=>{const t=document.getElementById("create-listing-form");t&&t.addEventListener("submit",f)});
